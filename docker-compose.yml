version: '3.8'

services:
  web:
    container_name: unicorn_frontend_container
    image: unicorn_frontend_image
    build:
      context: .
      dockerfile: Dockerfile_frontend
      target: ${TARGET:-prod}
    ports:
      - 5050:5173  # Vite Dev server (frontend)
      - 3000:80    # Production Nginx (serves frontend)
    volumes:
      - ./unicorn-frontend:/app/web
      - node_modules:/app/web/node_modules
    depends_on:
      - api
    restart: on-failure:10
    healthcheck:
      test: curl --fail http://localhost:5050 || exit 1  # Frontend healthcheck
      start_period: 5s
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - full_stack

  api:
    container_name: unicorn_backend_container
    image: unicorn_backend_image
    build:
      context: .
      dockerfile: Dockerfile_Backend
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - 8888:80  # Expose Nginx proxy on port 8080
      - 8000:8000  # Laravel API on 8000
    volumes:
      - ./unicorn-backend:/app/api
      #- ./shell-command-entrypoint:/app/shell-command-entrypoint
    env_file:
      - ./unicorn-backend/.env  
    # environment:
    #   MYSQL_DATABASE: laravel
    #   MYSQL_USER: laravel
    #   MYSQL_PASSWORD: secret
    #   MYSQL_ROOT_PASSWORD: secret
    restart: on-failure:10
    healthcheck:
      test: curl --fail http://localhost:8888 || exit 1  # API healthcheck
      start_period: 10s
      interval: 30s
      timeout: 5s
      retries: 3
    #command: ["/bin/sh", "-c", "composer install && php artisan migrate:refresh --seed && php-fpm -D && nginx -g 'daemon off;'"]
    #command: ["/bin/sh", "-c", "/app/shell-command-entrypoint/backend-entrypoint.sh"]
    #entrypoint: ["/bin/sh", "/app/shell-command-entrypoint/backend-entrypoint.sh"]   
    networks:
      - full_stack

  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306
    env_file:
      - ./unicorn-backend/.env  
    # environment: 
      # MYSQL_DATABASE: laravel
      # MYSQL_USER: laravel
      # MYSQL_PASSWORD: secret
      # MYSQL_ROOT_PASSWORD: secret
    volumes:
      #- ./unicorn-backend/mysql:/var/lib/mysql # Persist MySQL data
      -  mysql-data:/var/lib/mysql 
    networks:
      - full_stack 

networks:
  full_stack: {}
volumes:
  node_modules:  
  mysql-data:  
